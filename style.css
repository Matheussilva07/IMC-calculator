*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root{
    font-size: 62,5%;

    /* cores */
    --tt-heading: #0C3440;

    --tt-label: #00453A;
    --tt-input: #212529;
    --ot-input: #02799D;
    --bd-input: rgba(73,80,87,0.3);
    --tt-placeholder: rgba(73,80,87,0.5);
    
    --tt-button: white;
    --bg-button:#02799D;
    --bg-button-hover:#075c76;

    --bg-error: #F03E3E;
    --tt-error:white;
}

body{
    font-family: "Roboto", sans-serif;
    background-color: #040924 ;

}

body, input , button{
    
    font-size: 1.6rem;
    line-height: 2rem;

}
.container{
    height: 100vh;
    display: grid;
    place-content: center;
}

.card{
  padding: 4.8rem 6.4rem 6.4rem;
  background: white;
  max-width: 42.8rem;
  margin-inline: auto;

  box-shadow: 0 .2rem .4rem rgba(0, 0,0,0.1);
  border-radius: .6rem;
}

.title{
    font-size:3.2rem ;
    line-height: 4rem;
}

form{
    width: 30rem;
}

form h1{
    margin-bottom: 3.2rem;

    color: var(--tt-heading);
}

form label{

    font-size: 1.4rem;
    line-height: 1.8rem;

    color:var(--tt-label);

    margin-bottom: .8rem;
    
    /* Elemento que são display inline não aceitam a propriedade margin, para isso é necessário transformá-los em display block. */

    display: block;
}

form input{
    width: 100%;

    border: 1px solid var(--bd-input);
    background-color: var(--bd-input);
    padding: 1.6rem;
    border-radius: .4rem;
}

form input:focus{
   outline: 2px solid var(--ot-input);
}

form input::placeholder{
    color: var(--tt-placeholder);
}

/* Quando usamos o sinal de adição, estamos dizendo que apenas o último elemento é quemm receberá as propriedades CSS. */

.input-wrapper + .input-wrapper{
    margin-top: 1.6rem;
}

form button{
    margin-top: 3.2rem;
    padding: 1.6rem;
    width: 100%;

    border-radius: .4rem;
    border: none;
    background: var(--bg-button);
    color: var(--tt-button);

    display: flex;
    align-items: center;
    justify-content: center;
    gap: .8rem;

    font-weight: bold;

    cursor: pointer;

    transition: background .3s ;
/* 
    Se colocar a transição do efeito diretamente no hover, assim que o mouse for tirado, a transição não será feita, apenas quando o mouse estiver em cima. 
    Por essa razão, devemos colocar a transição diretamento no elemento(button) e não no hover, por exemplo. E também podemos especificar qual elemento receberá a transição.*/
}

form button:hover{
    background: var(--bg-button-hover);
    
    
}

/* MODAL */

.modal-wrapper.open{
    opacity: 1;
    visibility: visible;
}

.modal-wrapper{
    position: absolute;
    inset: 0;
    background: rgba(0, 0,0,0.7);

    display: grid;
    place-content: center;

    opacity: 0;
    visibility: hidden;
}
.modal{
 position: relative;
}
.modal button{
    background: none;
    border: none;

    position: absolute;
    top: 1.6rem;
    right: 1.6rem;

    cursor: pointer;

    transition:transform .2s;
   
}
.modal button:hover{
    transform: scale(1.2);
}

/* Alert error  */

.alert-error.open{
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
}

.alert-error{
    position: absolute;
    background-color: var(--bg-error);

    top: 0;
    right: 0;
    left: 0;

    text-align: center;
    color: var(--tt-error);

    padding: .8rem 0;
    font-weight: bold;

    visibility: hidden;
    opacity: 0;

    transform: translateY(-30px);
    transition: transform .5s;
}